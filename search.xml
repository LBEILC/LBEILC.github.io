<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/12/24/Spring-Boot-Vite-Vue3%E4%BA%8C%E6%89%8B%E5%95%86%E5%9F%8E/"/>
      <url>/2022/12/24/Spring-Boot-Vite-Vue3%E4%BA%8C%E6%89%8B%E5%95%86%E5%9F%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-Vite-Vue3二手商城"><a href="#Spring-Boot-Vite-Vue3二手商城" class="headerlink" title="Spring Boot+Vite+Vue3二手商城"></a>Spring Boot+Vite+Vue3二手商城</h1><h2 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h2><ul><li><p>node .js v16.16.0</p></li><li><p>npm v8.11.0</p></li><li><p>jdk v1.8</p></li><li><p>vite v2.9.13</p></li><li><p>后端JAVAIDE</p><ul><li>idea 2022.2.1</li></ul></li><li><p>前端开发IDE</p><ul><li><p>webStrom 2022.2.1</p></li><li><p>HBuilderX 3.6.14</p></li></ul></li><li><p>maven-3.8.6-bin</p></li></ul><h2 id="前端框架搭建"><a href="#前端框架搭建" class="headerlink" title="前端框架搭建"></a>前端框架搭建</h2><h3 id="vite-搭建"><a href="#vite-搭建" class="headerlink" title="vite 搭建"></a>vite 搭建</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm 7+, 需要额外的双横线：</span></span><br><span class="line">npm init vite@latest 项目名称 -- --template vue</span><br><span class="line">cd 安装路径</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h3 id="引入element-plus"><a href="#引入element-plus" class="headerlink" title="引入element-plus"></a>引入element-plus</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br></pre></td></tr></table></figure><h3 id="引入vue-router"><a href="#引入vue-router" class="headerlink" title="引入vue-router"></a>引入vue-router</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router -S</span><br></pre></td></tr></table></figure><h3 id="修改vite项目下的main-js"><a href="#修改vite项目下的main-js" class="headerlink" title="修改vite项目下的main.js"></a>修改vite项目下的main.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span><span class="comment">//引入element-plus框架</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/dist/index.css&#x27;</span><span class="comment">//应用element-plus样式</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span><span class="comment">//引入vue-router</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>).<span class="title function_">use</span>(router).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"><span class="comment">//.use(ElementPlus).use(router)使用引入的组件</span></span><br></pre></td></tr></table></figure><h2 id="前端框架编写"><a href="#前端框架编写" class="headerlink" title="前端框架编写"></a>前端框架编写</h2><h3 id="编写router配置"><a href="#编写router配置" class="headerlink" title="编写router配置"></a>编写router配置</h3><ul><li><p>在src目录下创建router目录</p></li><li><p>在目录下床架index.js来配置路由文件</p></li><li><p>```js<br>import {</p><pre><code>createRouter,createWebHistory,</code></pre><p>} from ‘vue-router’</p><p>// 默认的网页标题<br>const defaultTitle = ‘home’;</p><p>// 配置路由文件<br>const routes = [</p><pre><code>&#123;    // 对应的路由路径    path: &#39;/&#39;,    name: &#39;Home&#39;,    // 对应的页面    component: () =&gt; import(&#39;../views/Home.vue&#39;),    // 对应页面的名称    meta: &#123;hidden: true, title: &quot;主页&quot;&#125;&#125;,</code></pre><p>]</p><p>// 创建路由对象<br>const router = createRouter({</p><pre><code>history: createWebHistory(&quot;/&quot;),routes: routes,</code></pre><p>})</p><p>// 改变对应页面的标题<br>router.beforeEach((to, from, next) =&gt; {</p><pre><code>document.title = to.meta.title ? to.meta.title : defaultTitle;next();</code></pre><p>});<br>/**</p><ul><li>输出对象</li></ul><p> */<br>export default router;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 应用router配置</span><br><span class="line"></span><br><span class="line">+ 在src目录下创建views目录,即具体的路由界面</span><br><span class="line"></span><br><span class="line">+ 在views目录下创建需要的页面</span><br><span class="line"></span><br><span class="line">+ 改写App.vue</span><br><span class="line"></span><br><span class="line">+ ```html</span><br><span class="line">  &lt;template&gt;</span><br><span class="line">    &lt;router-view /&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;style&gt;</span><br><span class="line">  * &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">  &#125;</span><br><span class="line">  &lt;/style&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="运行前端框架"><a href="#运行前端框架" class="headerlink" title="运行前端框架"></a>运行前端框架</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h2 id="编写登录页面"><a href="#编写登录页面" class="headerlink" title="编写登录页面"></a>编写登录页面</h2><h3 id="页面主体"><a href="#页面主体" class="headerlink" title="页面主体"></a>页面主体</h3><h2 id="编写SM-MS图床上传-巨坑"><a href="#编写SM-MS图床上传-巨坑" class="headerlink" title="编写SM.MS图床上传(巨坑)"></a>编写SM.MS图床上传(巨坑)</h2><h4 id="在vite-config-js中配置跨域设置"><a href="#在vite-config-js中配置跨域设置" class="headerlink" title="在vite.config.js中配置跨域设置"></a>在vite.config.js中配置跨域设置</h4><ul><li><p>坑:不能直接使用官方api地址,官方api地址在中国无法访问,需要改为”<a href="https://smms.app/api/v2/&quot;">https://smms.app/api/v2/&quot;</a></p></li><li><p>```js<br>server:{</p><pre><code>proxy: &#123;  &#39;/api&#39;: &#123;    secure: false,    changeOrigin: true,    target: &#39;https://smms.app/api/v2/&#39;,    rewrite: path =&gt; path.replace(/^\/api/, &#39;&#39;)  &#125;&#125;</code></pre><p>  }</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 编写前端请求</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; accept=&quot;image/*&quot; ref=&quot;picture&quot; multiple=&quot;multiple&quot; @change=&quot;getPicture($event)&quot;/&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script setup&gt;</span><br><span class="line">  import axios from &quot;axios&quot;;</span><br><span class="line">  function getPicture(e) &#123;</span><br><span class="line">    const formData = new FormData();</span><br><span class="line">    formData.append(&quot;smfile&quot;, e.target.files[0]);</span><br><span class="line">    axios(&#123;</span><br><span class="line">      method: &quot;POST&quot;,</span><br><span class="line">      url: &quot;/api/upload&quot;,//sm.ms图床</span><br><span class="line">      headers: &#123;&#x27;Content-Type&#x27;: &#x27;multipart/form-data&#x27;, &#x27;Authorization&#x27;: &#x27;kNpYkOLitfvgPOkitOTBwDfzNzGPMDLY&#x27;&#125;,</span><br><span class="line">      data: formData</span><br><span class="line">    &#125;).then((response) =&gt; &#123;</span><br><span class="line">      // 在控制台输出响应体中图片在服务器中的url地址</span><br><span class="line">      console.log(response.data)//response.data就有返回的图片地址</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; //存储图片</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">  &lt;style&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/style&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="后端框架搭建"><a href="#后端框架搭建" class="headerlink" title="后端框架搭建"></a>后端框架搭建</h2><h3 id="配置maven-提高导包速度"><a href="#配置maven-提高导包速度" class="headerlink" title="配置maven(提高导包速度)"></a>配置maven(提高导包速度)</h3><ul><li>apache-maven-3.8.6\conf\setting.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>uk<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://uk.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>CN<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>OSChina Central<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.oschina.net/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>internal nexus repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo.maven.apache.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="设置idea"><a href="#设置idea" class="headerlink" title="设置idea"></a>设置idea</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><ul><li><p>MyBatisX</p></li><li><p>LomBok(默认已安装)</p></li></ul><h4 id="更改文件编码格式"><a href="#更改文件编码格式" class="headerlink" title="更改文件编码格式"></a>更改文件编码格式</h4><ul><li>全改为UTF-8</li></ul><p><img src="Photo/%E6%94%B9UTF-8.png" alt="改UTF-8"></p><h4 id="设置maven路径"><a href="#设置maven路径" class="headerlink" title="设置maven路径"></a>设置maven路径</h4><p><img src="Photo/%E8%AE%BE%E7%BD%AEmaven%E8%B7%AF%E5%BE%84.png" alt="设置maven路径"></p><h3 id="创建Spring-Boot项目"><a href="#创建Spring-Boot项目" class="headerlink" title="创建Spring-Boot项目"></a>创建Spring-Boot项目</h3><ul><li><p>使用idea自动搭建Spring-Boot项目</p></li><li><p>选择生成器中的Spring Initializer</p></li><li><p>将服务器URL改为:start.aliyun.com</p></li><li><p>类型选择Maven</p></li><li><p>Java版本选Java8</p></li><li><p><img src="Photo/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE.png" alt="创建项目"></p></li><li><ul><li><p>选择组件</p></li><li><p>Spring Web (SpringMVC)</p></li><li><p>Mybatis</p></li><li><p>Lombok</p></li></ul></li></ul><h2 id="编写后端框架"><a href="#编写后端框架" class="headerlink" title="编写后端框架"></a>编写后端框架</h2><h3 id="设置application-properties来链接数据库"><a href="#设置application-properties来链接数据库" class="headerlink" title="设置application.properties来链接数据库"></a>设置application.properties来链接数据库</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用名称</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">demo</span></span><br><span class="line"><span class="comment">#下面这些内容是为了让MyBatis映射</span></span><br><span class="line"><span class="comment">#指定Mybatis的Mapper文件</span></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=<span class="string">classpath:mappers/*xml</span></span><br><span class="line"><span class="comment">#指定Mybatis的实体目录</span></span><br><span class="line"><span class="attr">mybatis.type-aliases-package</span>=<span class="string">com.example.demo.entity</span></span><br><span class="line"><span class="comment"># 数据库驱动：</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment"># 数据源名称</span></span><br><span class="line"><span class="attr">spring.datasource.name</span>=<span class="string">defaultDataSource</span></span><br><span class="line"><span class="comment"># 数据库连接地址</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/数据库名称?serverTimezone=GMT%2b8&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="comment"># 数据库用户名&amp;密码：</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">root</span></span><br><span class="line"><span class="comment"># 应用服务 WEB 访问端口</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8080</span></span><br></pre></td></tr></table></figure><h3 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h3><ul><li><p>在路径下新建common 包</p></li><li><p>新建Java类,命名为CorsConfig</p></li><li><p>```java<br>import org.springframework.context.annotation.Bean;<br>import org.springframework.context.annotation.Configuration;<br>import org.springframework.web.cors.CorsConfiguration;<br>import org.springframework.web.cors.UrlBasedCorsConfigurationSource;<br>import org.springframework.web.filter.CorsFilter;</p><p>@Configuration<br>public class CorsConfig {</p><pre><code>// 当前跨域请求最大有效时长。这里默认1天private static final long MAX_AGE = 24 * 60 * 60;@Beanpublic CorsFilter corsFilter() &#123;    UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();    CorsConfiguration corsConfiguration = new CorsConfiguration();    corsConfiguration.addAllowedOrigin(&quot;*&quot;); // 1 设置访问源地址    corsConfiguration.addAllowedHeader(&quot;*&quot;); // 2 设置访问源请求头    corsConfiguration.addAllowedMethod(&quot;*&quot;); // 3 设置访问源请求方法    corsConfiguration.setMaxAge(MAX_AGE);    source.registerCorsConfiguration(&quot;/**&quot;, corsConfiguration); // 4 对接口配置跨域设置    return new CorsFilter(source);&#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 创建Mapper(接口)目录</span><br><span class="line"></span><br><span class="line">在resources文件下创建mapper目录(mybatis.mapper-locations=classpath:mappers/*xml由上方该条语句来确定创建目录的位置)</span><br><span class="line"></span><br><span class="line">### 创建entity(实体)类</span><br><span class="line"></span><br><span class="line">+ 创建entity包,用于管理不同实例entity类</span><br><span class="line"></span><br><span class="line">+ 以实例User为例</span><br><span class="line"></span><br><span class="line">+ ```java</span><br><span class="line">  // 引入lombok,快速创建get,set函数</span><br><span class="line">  import lombok.Data;</span><br><span class="line">  </span><br><span class="line">  // 标记为lombok的Data</span><br><span class="line">  @Data</span><br><span class="line">  public class User &#123;</span><br><span class="line">      // 根据数据库设置对应数据类型</span><br><span class="line">      private Integer id;</span><br><span class="line">      private String username;</span><br><span class="line">      private String password;</span><br><span class="line">      private String sex;</span><br><span class="line">      private Integer age;</span><br><span class="line">      private String phone;</span><br><span class="line">      private String email;</span><br><span class="line">      private String address;</span><br><span class="line">      private String avatar;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="创建和编写dao-工具-类"><a href="#创建和编写dao-工具-类" class="headerlink" title="创建和编写dao(工具)类"></a>创建和编写dao(工具)类</h3><ul><li><p>创建dao包,用于管理不同实例dao类</p></li><li><p>以实例UserDao为例</p></li><li><p>```java<br>import com.example.demo.entity.User;<br>import org.apache.ibatis.annotations.Mapper;<br>import org.apache.ibatis.annotations.Param;</p><p>import java.util.List;</p><p>// 为controller类中使用@Autowired自动注入<br>@Mapper<br>public interface UserDao {<br>// 创建函数后使用Alt+Enter快捷键通过插件快速创建对应的Mapper(需要先创建Mapper接口)</p><pre><code>// 寻找表中所有元素List&lt;User&gt; findAll();User findById(Integer id);// @Param(&quot;username&quot;) String username 传入参数,且参数名称为&quot;username&quot;User getByUser(@Param(&quot;username&quot;) String username, @Param(&quot;password&quot;) String password);// 添加后会返回向表中添加元素的个数int insert(User user);int update(User user);int deleteById(Integer id);User findByUser(String username);</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 配置相应Mapper.xml的文件头部来相互链接</span><br><span class="line"></span><br><span class="line">+ 以UserMapper.xml文件为例</span><br><span class="line"></span><br><span class="line">+ ```xml</span><br><span class="line">  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">  &lt;!DOCTYPE mapper</span><br><span class="line">          PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line">          &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">  &lt;mapper namespace=&quot;对应Dao类的空间地址&quot;&gt;</span><br><span class="line">  &lt;/mapper&gt;</span><br></pre></td></tr></table></figure><h3 id="编写Mapper-写SQL查询语句-文件"><a href="#编写Mapper-写SQL查询语句-文件" class="headerlink" title="编写Mapper(写SQL查询语句)文件"></a>编写Mapper(写SQL查询语句)文件</h3></li><li><p>以UserMapper.xml为例</p></li><li><p>增:</p></li><li><p>```xml</p><insert id="insert">      INSERT INTO `user`(username, password,sex,age,phone,email,address,avatar)      values (#{username}, #{password},#{sex},#{age},#{phone},#{email},#{address},#{avatar});</insert><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 删:</span><br><span class="line"></span><br><span class="line">+ ```xml</span><br><span class="line">  &lt;delete id=&quot;deleteById&quot;&gt;</span><br><span class="line">          DELETE</span><br><span class="line">          from `user`</span><br><span class="line">          where id = #&#123;id&#125;;</span><br><span class="line">      &lt;/delete&gt;</span><br></pre></td></tr></table></figure></li><li><p>改(使用了动态判断):</p></li><li><p>```xml</p><update id="update">        update `user`        <set>            <if test="username != null and username != ''">                username = #{username},            </if>            <if test="password != null and password != ''">                password = #{password},            </if>            <if test="sex != null and sex != ''">                sex = #{sex},            </if>            <if test="age != null">                age = #{age},            </if>            <if test="phone != null and phone != ''">                phone = #{phone},            </if>            <if test="email != null and email != ''">                email = #{email},            </if>            <if test="address != null and address != ''">                address = #{address},            </if>            <if test="avatar != null and avatar != ''">                avatar = #{avatar},            </if>        </set>        where id = #{id}    </update><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 查: </span><br><span class="line"></span><br><span class="line">+ + 查询所有:</span><br><span class="line"></span><br><span class="line">  + ```xml</span><br><span class="line">        &lt;select id=&quot;findAll&quot; resultType=&quot;com.example.demo.entity.User&quot;&gt;</span><br><span class="line">            SELECT *</span><br><span class="line">            FROM user;</span><br><span class="line">        &lt;/select&gt;</span><br></pre></td></tr></table></figure><ul><li><p>通过Id查询</p></li><li><p>```xml</p><pre><code>&lt;select id=&quot;findById&quot; resultType=&quot;com.example.demo.entity.User&quot;&gt;    SELECT *    FROM user    WHERE id = #&#123;id&#125;;&lt;/select&gt;</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 通过用户名和密码查询</span><br><span class="line"></span><br><span class="line">+ ```xml</span><br><span class="line">      &lt;select id=&quot;getByUser&quot; resultType=&quot;com.example.demo.entity.User&quot;&gt;</span><br><span class="line">          SELECT *</span><br><span class="line">          FROM user</span><br><span class="line">          WHERE username = #&#123;username&#125;</span><br><span class="line">            AND password = #&#123;password&#125;;</span><br><span class="line">      &lt;/select&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="创建Result-返回数据打包-类"><a href="#创建Result-返回数据打包-类" class="headerlink" title="创建Result(返回数据打包)类"></a>创建Result(返回数据打包)类</h3><ul><li><p>在common包中创建Result类</p></li><li><p>```java<br>package com.example.demo.common;</p><p>import lombok.Data;</p><p>@Data<br>public class Result {</p><pre><code>private String code;private String msg;private Object data;private static final String SUCCESS_CODE = &quot;200&quot;;private static final String SUCCESS_MSG = &quot;请求成功&quot;;private static final String ERROR_CODE = &quot;-1&quot;;// 成功的返回的函数(无参数)public static Result success() &#123;    Result result = new Result();    result.setCode(SUCCESS_CODE);    result.setMsg(SUCCESS_MSG);    return result;&#125;// 有返回参数的函数public static Result success(Object data) &#123;    Result result =  success();    result.setData(data);    return result;&#125;// 请求失败后,返回一个失败原因public static Result error(String msg) &#123;    Result result = new Result();    result.setCode(ERROR_CODE);    result.setMsg(msg);    return result;&#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 创建和编写controller(控制)类</span><br><span class="line"></span><br><span class="line">+ 创建controller包,用于管理不同实例controller类</span><br><span class="line"></span><br><span class="line">+ 以UserController为例</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">  package com.example.demo.controller;</span><br><span class="line"></span><br><span class="line">  import com.example.demo.common.Result;</span><br><span class="line">  import com.example.demo.dao.UserDao;</span><br><span class="line">  import com.example.demo.entity.User;</span><br><span class="line">  import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">  import org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line">  import java.util.List;</span><br><span class="line"></span><br><span class="line">  // 设置该类为控制器类</span><br><span class="line">  @RestController</span><br><span class="line">  // 设置默认访问路径,即通过&quot;127.0.0.1/user&quot;来访问接口</span><br><span class="line">  @RequestMapping(&quot;/user&quot;)</span><br><span class="line">  public class UserController &#123;</span><br><span class="line"></span><br><span class="line">      // 自动注入</span><br><span class="line">      @Autowired</span><br><span class="line">      private UserDao userDao;</span><br><span class="line"></span><br><span class="line">      // Get接口</span><br><span class="line">      @GetMapping</span><br><span class="line">      public Result findAll() &#123;</span><br><span class="line">          return Result.success(userDao.findAll());</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // @PathVariable需要一个参数时</span><br><span class="line">      @GetMapping(&quot;/&#123;id&#125;&quot;)</span><br><span class="line">      public Result findById(@PathVariable Integer id) &#123;</span><br><span class="line">          return Result.success(userDao.findById(id));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      @GetMapping(&quot;/username/&#123;username&#125;&quot;)</span><br><span class="line">      public Result findByUser(@PathVariable String username) &#123;</span><br><span class="line">          return Result.success(userDao.findByUser(username));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      // @RequestBody 需要多个参数时,直接把前端的对象转换为实体类</span><br><span class="line">      @PostMapping</span><br><span class="line">      public Result save(@RequestBody User user) &#123;</span><br><span class="line">          // 一旦不满足要求就直接返回失败</span><br><span class="line">          if (user.getUsername() == null || user.getPassword() == null) &#123;</span><br><span class="line">              return Result.error(&quot;参数错误&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">          Result result =Result.success(userDao.insert(user));</span><br><span class="line">          return result;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      @PostMapping(&quot;/login&quot;)</span><br><span class="line">      public Result login(@RequestBody User user) &#123;</span><br><span class="line">          if (user.getUsername() == null || user.getPassword() == null) &#123;</span><br><span class="line">              return Result.error(&quot;参数错误&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">          User result = userDao.getByUser(user.getUsername(), user.getPassword());</span><br><span class="line"></span><br><span class="line">          if (result == null) &#123;</span><br><span class="line">              return Result.error(&quot;账号或密码错误&quot;);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          return Result.success(result);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      @PutMapping</span><br><span class="line">      public Result update(@RequestBody User user) &#123;</span><br><span class="line">          if (user.getId() == null) &#123;</span><br><span class="line">              return Result.error(&quot;参数错误&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">          userDao.update(user);</span><br><span class="line">          return Result.success();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      @DeleteMapping(&quot;/&#123;id&#125;&quot;)</span><br><span class="line">      public Result delete(@PathVariable Integer id) &#123;</span><br><span class="line">          if (id == null || id == 0) &#123;</span><br><span class="line">              return Result.error(&quot;参数错误&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">          return Result.success(userDao.deleteById(id) == 1);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125; </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
