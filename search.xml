<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux学习</title>
      <link href="/2022/12/24/Linux%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/12/24/Linux%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux学习"><a href="#Linux学习" class="headerlink" title="Linux学习"></a>Linux学习</h1><h2 id="第一章-Linux基础"><a href="#第一章-Linux基础" class="headerlink" title="第一章 Linux基础"></a>第一章 Linux基础</h2><h3 id="CentOS安装"><a href="#CentOS安装" class="headerlink" title="CentOS安装"></a>CentOS安装</h3><p>CentOS下载链接:<a href="https://vault.centos.org/7.6.1810/isos/x86_64/CentOS-7-x86_64-DVD-1810.iso">https://vault.centos.org/7.6.1810/isos/x86_64/CentOS-7-x86_64-DVD-1810.iso</a></p><h2 id="第二章-Linux目录结构-基础命令-vim编辑器"><a href="#第二章-Linux目录结构-基础命令-vim编辑器" class="headerlink" title="第二章 Linux目录结构,基础命令,vim编辑器"></a>第二章 Linux目录结构,基础命令,vim编辑器</h2><h3 id="Linux的目录结构"><a href="#Linux的目录结构" class="headerlink" title="Linux的目录结构"></a>Linux的目录结构</h3><h4 id="Linux路径描述方式"><a href="#Linux路径描述方式" class="headerlink" title="Linux路径描述方式"></a>Linux路径描述方式</h4><p>在Linux系统中,路径之间的层级关系,使用<code>/</code>来表示</p><h3 id="Linux命令入门"><a href="#Linux命令入门" class="headerlink" title="Linux命令入门"></a>Linux命令入门</h3><h4 id="Linux命令基础格式"><a href="#Linux命令基础格式" class="headerlink" title="Linux命令基础格式"></a>Linux命令基础格式</h4><p><strong>无论是什么命令，用于什么用途，在Linux中，命令有其通用的格式:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command [-options] [parameter]</span><br></pre></td></tr></table></figure><ul><li><p>command:命令本身</p></li><li><p>options: [可选,非必填]命令的一些选项，可以通过选项控制命令的行为细节</p></li><li><p>parameter: [可选，非必填]命令的参数,多数用于命令的指向目标等语法中的[],表示可选的意思</p></li></ul><h4 id="目录相关命令"><a href="#目录相关命令" class="headerlink" title="目录相关命令"></a>目录相关命令</h4><h5 id="ls命令入门"><a href="#ls命令入门" class="headerlink" title="ls命令入门"></a>ls命令入门</h5><p><strong>ls命令的作用是列出目录下的内容，语法细节如下:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls [-a -l -h] [Linux路径]</span><br></pre></td></tr></table></figure><ul><li><p>-a-l-h是可选的选项</p></li><li><p>Linux路径是此命令可选的参数</p></li></ul><p>当不使用选项和参数,直接使用ls命令本体,表示:以平铺形式,列出当前工作目录下的内容</p><h5 id="ls命令的参数和选项"><a href="#ls命令的参数和选项" class="headerlink" title="ls命令的参数和选项"></a>ls命令的参数和选项</h5><p><strong>刚刚展示了，直接使用ls命令，并未使用选项和参数。</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls [-a -l -h] [Linux路径]</span><br></pre></td></tr></table></figure><p>参数的作用:</p><ul><li><p>当ls不使用参数，表示列出:当前工作目录的内容，即用户的HOME目录</p></li><li><p>当使用参数，ls命令的参数表示:指定一个Linux路径，列出指定路径的内容</p></li></ul><p>选项的作用:</p><ul><li><p>-a选项，表示: all的意思，即列出全部文件（包含隐藏的文件/文件夹)</p></li><li><p>-l选项，表示:以列表（竖向排列）的形式展示内容，并展示更多信息</p></li><li><p>-h表示以易于阅读的形式，列出文件大小，如K、M、G</p></li><li><p>-h选项必须要搭配-l一起使用</p></li></ul><h5 id="cd切换工作目录命令"><a href="#cd切换工作目录命令" class="headerlink" title="cd切换工作目录命令"></a>cd切换工作目录命令</h5><p><strong>当Linux终端（命令行）打开的时候，会默认以用户的HOME目录作为当前的工作目录我们可以通过cd命令，更改当前所在的工作目录。</strong></p><p>cd命令来自英文:Change Directory</p><p>语法: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd [Linux路径]</span><br></pre></td></tr></table></figure><ul><li>cd命令无需选项，只有参数，表示要切换到哪个目录下</li><li>cd命令直接执行，不写参数，表示回到用户的HOME目录</li></ul><h5 id="pwd展示当前工作目录命令"><a href="#pwd展示当前工作目录命令" class="headerlink" title="pwd展示当前工作目录命令"></a>pwd展示当前工作目录命令</h5><p>通过ls来验证当前的工作目录，其实是不恰当的。我们可以通过pwd命令，来查看当前所在的工作目录。</p><p>pwd命令来自:Print Work Directory</p><p>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br></pre></td></tr></table></figure><ul><li>pwd命令，无选项，无参数，直接输入pwd即可</li></ul><h5 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h5><p><strong>通过mkdir命令可以创建新的目录（文件夹)</strong></p><p>mkdir来自英文:Make Directory</p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir [-p] Linux路径</span><br></pre></td></tr></table></figure><ul><li><p>参数必填，表示Linux路径，即要创建的文件夹的路径，相对路径或绝对路径均可</p></li><li><p>-p选项可选，表示自动创建不存在的父目录，适用于创建连续多层级的目录</p></li><li><p>注意︰创建文件夹需要修改权限，请确保操作均在HOME目录内，不要在HOME外操作，涉及到权限问题，HOME外无法成功</p></li></ul><h4 id="相对路径和绝对路径"><a href="#相对路径和绝对路径" class="headerlink" title="相对路径和绝对路径"></a>相对路径和绝对路径</h4><ul><li><p>绝对路径:以根目录为起点，描述路径的一种写法，路径描述以/开头</p></li><li><p>相对路径:以当前目录为起点，描述路径的一种写法，路径描述无需以/开头</p></li></ul><h4 id="特殊路径符"><a href="#特殊路径符" class="headerlink" title="特殊路径符"></a>特殊路径符</h4><ul><li><code>.</code> 表示当前目录，比如:<code>cd ./Desktop</code>表示切换到当前目录下的Desktop目录内，和<code>cd Desktop</code>效果一致</li><li><code>..</code>表示上一级目录，比如: <code>cd ..</code>即可切换到上一级目录，<code>cd ../..</code>切换到上二级的目录</li><li><code>...</code> 表示HOME目录，比如: <code>cd ~</code>即可切换到HOME目录，<code>cd ~/Desktop</code>，切换到HOME内的Desktop目录</li></ul><h4 id="文件操作相关命令"><a href="#文件操作相关命令" class="headerlink" title="文件操作相关命令"></a>文件操作相关命令</h4><h5 id="touch创建文件"><a href="#touch创建文件" class="headerlink" title="touch创建文件"></a>touch创建文件</h5><p>可以通过touch命令创建文件</p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch [Linux路径]</span><br></pre></td></tr></table></figure><ul><li>touch命令无选项，参数必填，表示要创建的文件路径，相对、绝对、特殊路径符均可以使用</li></ul><h5 id="cat-more查看文件"><a href="#cat-more查看文件" class="headerlink" title="cat,more查看文件"></a>cat,more查看文件</h5><p><strong>准备好文件内容后，可以通过cat查看内容。</strong></p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat [Linux路径]</span><br></pre></td></tr></table></figure><ul><li>cat同样没有选项，只有必填参数，参数表示:被查看的文件路径，相对、绝对、特殊路径符都可以使用</li></ul><p><strong>more命令同样可以查看文件内容，同cat不同的是:</strong></p><ul><li><p>cat是直接将内容全部显示出来</p></li><li><p>more支持翻页，如果文件内容过多，可以一页页的展示</p></li></ul><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more [Linux路径]</span><br></pre></td></tr></table></figure><p>同样没有选项，只有必填参数，参数表示:被查看的文件路径，相对、绝对、特殊路径符都可以使用</p><p>Linux系统内置有一个文件，路径为: <code>/etc/services</code>，可以使用more命令查看</p><p><code>more /etc/services</code></p><ul><li><p>在查看的过程中，通过空格翻页</p></li><li><p>通过q退出查看</p></li></ul><h5 id="cp复制文件、文件夹"><a href="#cp复制文件、文件夹" class="headerlink" title="cp复制文件、文件夹"></a>cp复制文件、文件夹</h5><p><strong>cp命令可以用于复制文件\文件夹，cp命令来自英文单词:copy</strong></p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp [-r] 参数1 参数2</span><br></pre></td></tr></table></figure><ul><li><p>-r选项，可选，用于复制文件夹使用，表示递归</p></li><li><p>参数1，Linux路径，表示被复制的文件或文件夹</p></li><li><p>参数2，Linux路径，表示要复制去的地方</p></li></ul><h5 id="mv移动文件、文件夹"><a href="#mv移动文件、文件夹" class="headerlink" title="mv移动文件、文件夹"></a>mv移动文件、文件夹</h5><p><strong>mv命令可以用于移动文件\文件夹，mv命令来自英文单词:move</strong></p><p>语法: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv 参数1 参数2</span><br></pre></td></tr></table></figure><ul><li><p>参数1，Linux路径，表示被移动的文件或文件夹</p></li><li><p>参数2，Linux路径，表示要移动去的地方</p></li><li><p>如果目标不存在，则进行改名，确保目标存在</p></li></ul><h5 id="rm删除文件、文件夹"><a href="#rm删除文件、文件夹" class="headerlink" title="rm删除文件、文件夹"></a>rm删除文件、文件夹</h5><p><strong>rm命令可用于删除文件、文件夹，rm命令来自英文单词:remove</strong></p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm [-r -f] 参数1 参数2 ...... 参数N</span><br></pre></td></tr></table></figure><ul><li><p>同cp命令一样，-r选项用于删除文件夹</p></li><li><p>-f表示force，强制删除（不会弹出提示确认信息)</p><ul><li><p>普通用户删除内容不会弹出提示，只有root管理员用户删除内容会有提示</p></li><li><p>所以一般普通用户用不到-f选项</p></li></ul></li><li><p>参数1、参数2、.…….、参数N表示要删除的文件或文件夹路径，按照空格隔开</p></li></ul><p><strong>rm命令支持通配符，用来做模糊匹配</strong></p><ul><li>符号<code> *</code>表示通配符，即匹配任意内容（包含空)，示例:</li><li><code>test*</code>，表示匹配任何以<code>test</code>开头的内容</li><li><code>*test</code>，表示匹配任何以<code>test</code>结尾的内容</li><li><code>*test*</code>，表示匹配任何包含<code>test</code>的内容</li></ul><h4 id="查找相关命令"><a href="#查找相关命令" class="headerlink" title="查找相关命令"></a>查找相关命令</h4><h5 id="which命令"><a href="#which命令" class="headerlink" title="which命令"></a>which命令</h5><p>Linux命令，其实它们的本体就是一个个的二进制可执行程序。和windows系统中的.exe文件，是一个意思。</p><p><strong>which命令，可以查看所使用的一系列命令的程序文件存放在哪里</strong></p><p>语法: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which 要查找的命令</span><br></pre></td></tr></table></figure><h5 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h5><p><strong>find命令可以搜索指定的文件。</strong></p><p>按文件名查找语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find 起始路径 -name &quot;被查找文件名&quot;</span><br></pre></td></tr></table></figure><p> 为了确保后续演示，拥有最大的权限，可以在整个系统完成搜索我们可以切换到root用户以获得管理员权限</p><p>执行命令:</p><p><code>su - root</code></p><p>输入密码:123456（和你普通用户的密码一样）</p><p>被查找文件名，支持使用通配符<code> *</code>来做模糊查询。</p><p>按文件大小查找语法: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find 起始路径 -size +|-n[kMG]</span><br></pre></td></tr></table></figure><ul><li><p>+、-表示大于和小于</p></li><li><p>n表示大小数字</p></li><li><p>kMG表示大小单位，k(小写字母)表示kb，M表示MB，G表示GB</p></li></ul><p>示例:</p><ul><li>查找小于10KB的文件: <code>find / -size -10k</code></li><li>查找大于100MB的文件: <code>find / -size +100M</code></li><li>查找大于1GB的文件: <code>find / -size +1G</code></li></ul><h4 id="grep命令过滤文件内容"><a href="#grep命令过滤文件内容" class="headerlink" title="grep命令过滤文件内容"></a>grep命令过滤文件内容</h4><p><strong>可以通过grep命令，从文件中通过关键字过滤文件行。</strong></p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [-n] 关键字 文件路径</span><br></pre></td></tr></table></figure><ul><li><p>选项-n，可选，表示在结果中显示匹配的行的行号。</p></li><li><p>关键字，必填，表示过滤的关键字，带有空格或其它特殊符号，建议使用<code>&quot;&quot;</code>将关键字包围起来。</p></li><li><p>文件路径，必填，表示要过滤内容的文件路径，<strong>可作为内容输入端口</strong></p></li></ul><h4 id="wc命令统计内容数量"><a href="#wc命令统计内容数量" class="headerlink" title="wc命令统计内容数量"></a>wc命令统计内容数量</h4><p><strong>可以通过wc命令统计文件的行数、单词数量等</strong></p><p>语法: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc [-c -m -1 -w] 文件路径</span><br></pre></td></tr></table></figure><ul><li><p>选项，-c，统计bytes数量</p></li><li><p>选项，-m，统计字符数量</p></li><li><p>选项，-l，统计行数</p></li><li><p>选项，-w，统计单词数量</p></li><li><p>文件路径，被统计的文件，<strong>可作为内容输入端口</strong></p></li></ul><h4 id="管道符的概念和应用"><a href="#管道符的概念和应用" class="headerlink" title="管道符的概念和应用"></a>管道符的概念和应用</h4><p>学习了grep命令后，我们在来学习一个新的特殊符号，管道符<code>|</code></p><p>含义:将管道符左边命令的结果，作为右边命令的输入</p><p>如图:</p><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%94%E7%A4%BA.png" alt="管道符演示"></p><h4 id="echo命令输出内容"><a href="#echo命令输出内容" class="headerlink" title="echo命令输出内容"></a>echo命令输出内容</h4><p><strong>echo命令可以在命令行内输出指定内容</strong></p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 输出的内容</span><br></pre></td></tr></table></figure><ul><li>无需选项，只有一个参数，表示要输出的内容，复杂内容可以用””包围</li></ul><h4 id="反引号-的使用"><a href="#反引号-的使用" class="headerlink" title="反引号`的使用"></a>反引号`的使用</h4><p>看一下如下命令: <code>echo pwd</code></p><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E5%8F%8D%E5%BC%95%E5%8F%B71.png" alt="反引号1"></p><p>本意是想输出当前的工作路径，但是pwd被作为普通字符输出了。</p><p>我们可以通过将命令用反引号（通常也称之为飘号) 将其包围被包围的内容，会被作为命令执行，而非普通字符，如:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo `pwd`</span><br></pre></td></tr></table></figure><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E5%8F%8D%E5%BC%95%E5%8F%B72.png" alt="反引号2"></p><h4 id="tail命令跟踪文件更改"><a href="#tail命令跟踪文件更改" class="headerlink" title="tail命令跟踪文件更改"></a>tail命令跟踪文件更改</h4><p>使用tail命令，可以查看文件尾部内容，跟踪文件的最新更改</p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail [-f -num] Linux路径</span><br></pre></td></tr></table></figure><ul><li><p>参数，Linux路径，表示被跟踪的文件路径</p></li><li><p>选项，-f，表示持续跟踪</p></li><li><p>选项，-num，表示，查看尾部多少行，不填默认10行</p></li></ul><h4 id="重定向符号的使用"><a href="#重定向符号的使用" class="headerlink" title="重定向符号的使用"></a>重定向符号的使用</h4><p>两个特殊符号，重定向符:<code>&gt;</code>和<code>&gt;&gt;</code></p><ul><li><code> &gt;</code>，将左侧命令的结果，覆盖写入到符号右侧指定的文件中</li><li><code> &gt;&gt;</code> ，将左侧命令的结果，追加写入到符号右侧指定的文件中</li></ul><p>演示:</p><ul><li><p><code> echo &quot;Hello&quot; &gt; test.txt</code></p><ul><li><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7.png" alt="特殊符号"></li></ul></li><li><p><code> echo &quot;Hello&quot; &gt;&gt; test.txt</code></p><ul><li><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B72.png" alt="特殊符号2"></li></ul></li></ul><h4 id="vi-vim编辑器"><a href="#vi-vim编辑器" class="headerlink" title="vi\vim编辑器"></a>vi\vim编辑器</h4><h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><p>vi\vim是visual interface的简称，是Linux中最经典的文本编辑器</p><p>同图形化界面中的文本编辑器一样，vi是命令行下对文本文件进行编辑的绝佳选择。</p><p>vim是vi的加强版本，兼容vi的所有指令，不仅能编辑文本，而且还具有shell程序编辑的功能，可以不同颜色的字体来辨别语法的正确性，极大方便了程序的设计和编辑性。</p><h5 id="三种工作模式"><a href="#三种工作模式" class="headerlink" title="三种工作模式"></a>三种工作模式</h5><ul><li>命令模式( command mode)<ul><li>命令模式下，所敲的按键编辑器都理解为命令，以命令驱动执行不同的功能。此模型下，不能自由进行文本编辑。</li></ul></li><li>输入模式(Insert mode)<ul><li>也就是所谓的编辑模式、插入模式。</li><li>此模式下，可以对文件内容进行自由编辑。</li></ul></li><li>底线命令模式(Last line mode)<ul><li>以:开始，通常用于文件的保存、退出。</li></ul></li></ul><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/vim%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F.png" alt="vim工作模式"></p><h5 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h5><p><strong>如果需要通过vi/vim编辑器编辑文件，请通过如下命令:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi 文件路径</span><br><span class="line">vim 文件路径</span><br></pre></td></tr></table></figure><p>vim兼容全部的vi功能，后续全部使用vim命令</p><ul><li><p>如果文件路径表示的文件不存在，那么此命令会用于编辑新文件</p></li><li><p>如果文件路径表示的文件存在，那么此命令用于编辑已有文件</p></li></ul><p>快速体验</p><ol><li><p>使用: <code>vim hello.txt</code>编辑一个新文件，执行后进入的是命令模式</p></li><li><p>在命令模式内，按键盘i，进入输入模式</p></li><li><p>在输入模式内输入:itheima qnd itcast!</p></li><li><p>输入完成后，按esc回退会命令模式</p></li><li><p>在命令模式内，按键盘︰，进入底线命令模式6．在底线命令内输入: wq，保存文件并退出vi编辑器</p></li></ol><h6 id="命令模式快捷键"><a href="#命令模式快捷键" class="headerlink" title="命令模式快捷键"></a>命令模式快捷键</h6><table><thead><tr><th align="right">命令</th><th>描述</th></tr></thead><tbody><tr><td align="right"><code>i</code></td><td>在当前光标位置进入输入模式</td></tr><tr><td align="right"><code>a</code></td><td>在当前光标位置之后进入输入模式</td></tr><tr><td align="right"><code>I</code></td><td>在当前行的开头，进入输入模式</td></tr><tr><td align="right"><code>A</code></td><td>在当前行的结尾，进入输入模式</td></tr><tr><td align="right"><code>o</code></td><td>在当前光标下一行进入输入模式</td></tr><tr><td align="right"><code> O</code></td><td>在当前光标上一行进入输入模式</td></tr><tr><td align="right"><code> 0</code></td><td>移动光标到当前行的开头</td></tr><tr><td align="right"><code> $</code></td><td>移动光标到当前行的结尾</td></tr><tr><td align="right"><code>pageup(PgUp)</code></td><td>向上翻页</td></tr><tr><td align="right"><code>pangdown ( PgDn)</code></td><td>向下翻页</td></tr><tr><td align="right"><code>/</code></td><td>进入搜索模式</td></tr><tr><td align="right"><code>n</code></td><td>向下继续搜索</td></tr><tr><td align="right"><code>N</code></td><td>向上继续搜索</td></tr><tr><td align="right"><code>dd</code></td><td>删除光标所在行的内容</td></tr><tr><td align="right"><code>ndd</code></td><td>n是数字，表示删除当前光标向下n行</td></tr><tr><td align="right"><code>yy</code></td><td>复制当前行</td></tr><tr><td align="right"><code>nyy</code></td><td>n是数字，复制当前行和下面的n行</td></tr><tr><td align="right"><code>p</code></td><td>粘贴复制的内容</td></tr><tr><td align="right"><code>u</code></td><td>撤销修改</td></tr><tr><td align="right"><code>ctrl + r</code></td><td>反向撤销修改</td></tr><tr><td align="right"><code>gg</code></td><td>跳到首行</td></tr><tr><td align="right"><code>G</code></td><td>跳到尾行</td></tr><tr><td align="right"><code>dG</code></td><td>从当前行开始，向下全部删除</td></tr><tr><td align="right"><code>dgg</code></td><td>从当前行开始，向上全部删除</td></tr><tr><td align="right"><code>d$</code></td><td>从当前光标开始，删除到本行的结尾</td></tr><tr><td align="right"><code>d0</code></td><td>从当前光标开始，删除到本行的开头</td></tr></tbody></table><h5 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h5><p>编辑模式没有什么特殊的，进入编辑模式后，任何快捷键都没有作用，就是正常输入文本而已。</p><p><strong>唯一需要记住的就是:通过esc，可以退回到命令模式中即可。</strong></p><h5 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h5><p>在命令模式内，输入<code> :</code>，即可进入底线命令模式，支持如下命令:</p><table><thead><tr><th align="right">命令</th><th>描述</th></tr></thead><tbody><tr><td align="right"><code>:wq</code></td><td>保存并退出</td></tr><tr><td align="right"><code>:q</code></td><td>仅退出</td></tr><tr><td align="right"><code>:q!</code></td><td>强制退出</td></tr><tr><td align="right"><code>:w</code></td><td>仅保存</td></tr><tr><td align="right"><code>:set nu</code></td><td>显示行号</td></tr><tr><td align="right"><code>: set paste</code></td><td>设置粘贴模式</td></tr></tbody></table><h2 id="第三章-Linux用户和权限"><a href="#第三章-Linux用户和权限" class="headerlink" title="第三章 Linux用户和权限"></a>第三章 Linux用户和权限</h2><h3 id="root用户"><a href="#root用户" class="headerlink" title="root用户"></a>root用户</h3><h4 id="什么是root用户"><a href="#什么是root用户" class="headerlink" title="什么是root用户"></a>什么是root用户</h4><p>root用户拥有最大的系统操作权限,而普通用户在许多地方的权限是受限的。</p><ul><li>普通用户的权限，一般在其HOME目录内是不受限的</li><li>一旦出了HOME目录，大多数地方，普通用户仅有只读和执行权限,无修改权限</li></ul><h4 id="su和exit命令"><a href="#su和exit命令" class="headerlink" title="su和exit命令"></a>su和exit命令</h4><p><strong>su命令就是用于账户切换的系统命令，其来源英文单词:Switch User</strong></p><p>语法: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su [-] [用户名]</span><br></pre></td></tr></table></figure><ul><li><code>-</code>是可选的,表示是否在切换用户后加载环境变量(后续讲解)，建议带上</li><li>参数:用户名，表示要切换的用户，用户名也可以省略,省略表示切换到root</li><li>切换用户后，可以通过<code>exit</code>命令退回上一个用户，也可以使用快捷键: <code>ctrl + d</code></li><li>使用普通用户，切换到其它用户需要输入密码，如切换到root用户</li><li>使用root用户切换到其它用户，无需密码，可以直接切换</li></ul><h4 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h4><p>在我们得知root密码的时候,可以通过su命令切换到root得到最大权限。但是我们不建议长期使用root用户，避免带来系统损坏。</p><p>我们可以使用sudo命令，为普通的命令授权,临时以root身份执行。</p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo 其它命令</span><br></pre></td></tr></table></figure><ul><li>在其它命令之前，带上sudo,即可为这一条命令临时赋予root授权</li><li>但是并不是所有的用户，都有权利使用sudo，我们需要为普通用户配置sudo认证</li></ul><h4 id="为普通用户配置sudo认证"><a href="#为普通用户配置sudo认证" class="headerlink" title="为普通用户配置sudo认证"></a>为普通用户配置sudo认证</h4><ul><li>切换到root用户，执行visudo命令，会自动通过vi编辑器打开:/etc/sudoers</li><li>在文件的最后添加:<ul><li><code>[username] ALL=(ALL)    NOPASSWD: ALL</code></li><li>其中最后的NOPASSWD:ALL表示使用sudo命令，无需输入密码</li></ul></li><li>最后通过wq保存</li><li>切换回普通用户</li></ul><h3 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h3><h4 id="用户-用户组"><a href="#用户-用户组" class="headerlink" title="用户,用户组"></a>用户,用户组</h4><p>Linux系统中可以:</p><ul><li>配置多个用户</li><li>配置多个用户组</li><li>用户可以加入多个用户组中</li></ul><p>Linux中关于权限的管控级别有2个级别,分别是:</p><ul><li>针对用户的权限控制</li><li>针对用户组的权限控制</li></ul><p>比如，针对某文件,可以控制用户的权限，也可以控制用户组的权限。</p><p>所以，我们需要学习在Linux中进行用户、用户组管理的基础命令，为后面学习权限控制打下基础</p><h4 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h4><p>以下命令需root用户执行</p><ul><li>创建用户组<ul><li><code>groupadd 用户组名</code></li></ul></li><li>删除用户组<ul><li><code>groupdel 用户组名</code></li></ul></li></ul><h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h4><p>以下命令需root用户执行</p><ul><li>创建用户<ul><li><code>useradd [-g -d] 用户名</code><ul><li>选项:-g指定用户的组，不指定-g，会创建同名组并自动加入，指定-g需要组已经存在，如已存在同名组，必须使用-g</li><li>选项:-d指定用户HOME路径，不指定，HOME目录默认在:/home/用户名</li></ul></li></ul></li><li>删除用户<ul><li><code>userdel [-r] 用户名</code><ul><li>选项:-r，删除用户的HOME目录，不使用-r，删除用户时，HOME目录保留</li></ul></li></ul></li><li>查看用户所属组<ul><li><code>id [用户名]</code><ul><li>参数:用户名，被查看的用户，如果不提供则查看自身。修改用户所属组</li></ul></li></ul></li><li>修改用户所属组<ul><li><code>usermod -aG 用户组 用户名</code><ul><li>将指定用户加入指定用户组</li></ul></li></ul></li></ul><h4 id="getent命令"><a href="#getent命令" class="headerlink" title="getent命令"></a>getent命令</h4><p><strong>使用getent命令，可以查看当前系统中有哪些用户或者用户组</strong></p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getent passwd #查看用户</span><br><span class="line">getent group #查看用户组</span><br></pre></td></tr></table></figure><h3 id="查看权限控制"><a href="#查看权限控制" class="headerlink" title="查看权限控制"></a>查看权限控制</h3><h4 id="查看Linux文件的权限管控信息"><a href="#查看Linux文件的权限管控信息" class="headerlink" title="查看Linux文件的权限管控信息"></a>查看Linux文件的权限管控信息</h4><p>通过ls -l可以以列表形式查看内容，并显示权限细节</p><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E6%9D%83%E9%99%90%E4%BF%A1%E6%81%AF.png" alt="权限信息"></p><ul><li>序号1,表示文件、文件夹的权限控制信息</li><li>序号2,表示文件、文件夹所属用户</li><li>序号3,表示文件、文件夹所属用户组</li></ul><h5 id="序号1"><a href="#序号1" class="headerlink" title="序号1"></a>序号1</h5><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E6%9D%83%E9%99%90%E4%BF%A1%E6%81%AF1.png" alt="权限信息1"></p><h4 id="读、写、执行三种权限的含义"><a href="#读、写、执行三种权限的含义" class="headerlink" title="读、写、执行三种权限的含义"></a>读、写、执行三种权限的含义</h4><ul><li>r表示读权限</li><li>w表示写权限</li><li>x表示执行权限</li></ul><p>针对文件、文件夹的不同，rwx的含义有细微差别. </p><ul><li>r，针对文件可以查看文件内容<ul><li>针对文件夹，可以查看文件夹内容，如ls命令</li></ul></li><li>w，针对文件表示可以修改此文件<ul><li>针对文件夹，可以在文件夹内:创建、删除、改名等操作</li></ul></li><li>x，针对文件表示可以将文件作为程序执行<ul><li>针对文件夹，表示可以更改工作目录到此文件夹，即cd进入</li></ul></li></ul><h3 id="修改权限控制"><a href="#修改权限控制" class="headerlink" title="修改权限控制"></a>修改权限控制</h3><h4 id="chmod修改权限信息"><a href="#chmod修改权限信息" class="headerlink" title="chmod修改权限信息"></a>chmod修改权限信息</h4><p>可以使用chmod命令,修改文件、文件夹的权限信息。</p><p>注意，只有文件、文件夹的所属用户或root用户可以修改。</p><p>语法: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R」权限文件或文件夹</span><br></pre></td></tr></table></figure><ul><li>选项:-R，对文件夹内的全部内容应用同样的操作</li></ul><p>实例:</p><p><code>chmod u=rwx,g=rx,o=x hello.txt</code>，将文件权限修改为:rwxr-x–x</p><ul><li>其中:u表示user所属用户权限,g表示group组权限,o表示other其它用户权限</li></ul><h4 id="使用数字序号标记权限"><a href="#使用数字序号标记权限" class="headerlink" title="使用数字序号标记权限"></a>使用数字序号标记权限</h4><p>权限可以用3位数字来代表，第一位数字表示用户权限，第二位表示用户组权限，第三位表示其它用户权限。</p><p>数字的细节如下: r记为4, w记为2,x记为1,可以有:</p><ul><li>0:无任何权限,即—</li><li>1:仅有x权限，即–x</li><li>2:仅有w权限―即-w-</li><li>3:有w和x权限即-wx</li><li>4:仅有r权限―即r–</li><li>5:有r和x权限―即r-x</li><li>6:有r和w权限―即rw-</li><li>7:有全部权限―即rwx</li></ul><p><code>chmod 751 hello.txt</code>，将文件权限修改为:rwxr-x–x</p><h4 id="chown修改所属用户、用户组"><a href="#chown修改所属用户、用户组" class="headerlink" title="chown修改所属用户、用户组"></a>chown修改所属用户、用户组</h4><p><strong>使用chown命令，可以修改文件、文件夹的所属用户和用户组</strong></p><p>普通用户无法修改所属为其它用户或组，所以此命令只适用于root用户执行</p><p>语法: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown [-R] [用户][:][用户组] 文件或文件夹</span><br></pre></td></tr></table></figure><ul><li>选项，-R，同chmod，对文件夹内全部内容应用相同规则</li><li>选项,用户，修改所属用户</li><li>选项,用户组，修改所属用户组</li><li><code>:</code>用于分隔用户和用户组</li></ul><p>示例:</p><ul><li><code>chown root hello.txt</code>,将hello.txt所属用户修改为root</li><li><code>chown :root hello.txt</code>,将hello.txt所属用户组修改为root</li><li><code>chown root:itheima hello.txt</code>,将hello.txt所属用户修改为root,用户组修改为itheima</li><li><code>chown -R root test</code>,将文件夹test的所属用户修改为root并对文件夹内全部内容应用同样规则</li></ul><h2 id="第四章-Linux实用操作"><a href="#第四章-Linux实用操作" class="headerlink" title="第四章 Linux实用操作"></a>第四章 Linux实用操作</h2><h3 id="各类小技巧快捷键"><a href="#各类小技巧快捷键" class="headerlink" title="各类小技巧快捷键"></a>各类小技巧快捷键</h3><h4 id="ctrl-c-强制停止"><a href="#ctrl-c-强制停止" class="headerlink" title="ctrl + c 强制停止"></a>ctrl + c 强制停止</h4><ul><li>Linux某些程序的运行,如果想要强制停止它，可以使用快捷键ctrl + c</li><li>命令输入错误，也可以通过快捷键ctrl+ c,退出当前输入，重新输入</li></ul><h4 id="ctrl-d-退出、登出"><a href="#ctrl-d-退出、登出" class="headerlink" title="ctrl + d 退出、登出"></a>ctrl + d 退出、登出</h4><ul><li>可以通过快捷键: ctrl + d,退出账户的登录</li><li>或者退出某些特定程序的专属页面</li><li>ps:不能用于退出vi/vim</li></ul><h4 id="历史命令搜索"><a href="#历史命令搜索" class="headerlink" title="历史命令搜索"></a>历史命令搜索</h4><ul><li>可以通过<code>history</code>命令，查看历史输入过的命令</li><li>可以通过<code>!</code>命令前缀，自动执行上一次匹配前缀的命令</li><li>可以通过快捷键<code>ctrl + r</code>,输入内容去匹配历史命令<ul><li>如果搜索到的内容是你需要的<ul><li>回车键可以直接执行</li><li>键盘左右键，可以得到此命令(不执行)</li></ul></li></ul></li></ul><h4 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h4><ul><li><code>ctrl + a</code>跳到命令开头</li><li><code>ctrl + e</code>跳到命令结尾</li><li><code>ctrl + 键盘左键</code>向左跳一个单词</li><li><code>ctrl + 键盘右键</code>向右跳一个单词</li></ul><h4 id="清屏"><a href="#清屏" class="headerlink" title="清屏"></a>清屏</h4><ul><li><code>ctrl + l</code>快捷键</li><li><code>clear</code>命令</li></ul><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><h4 id="使用yum为CentoS系统安装软件"><a href="#使用yum为CentoS系统安装软件" class="headerlink" title="使用yum为CentoS系统安装软件"></a>使用yum为CentoS系统安装软件</h4><h5 id="yum命令"><a href="#yum命令" class="headerlink" title="yum命令"></a>yum命令</h5><p>yum: RPM包软件管理器，用于自动化安装配置Linux软件，并可以自动解决依赖问题</p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum [-y] [install | remove | search] 软件名称</span><br></pre></td></tr></table></figure><ul><li>选项:-y，自动确认，无需手动确认安装或卸载过程</li><li>install:安装</li><li>remove:卸载</li><li>search:搜索</li></ul><p>yum命令需要root权限哦，可以su切换到root，或使用sudo提权。</p><p>yum命令需要联网</p><h4 id="使用apt为Ubuntu安装软件-扩展"><a href="#使用apt为Ubuntu安装软件-扩展" class="headerlink" title="使用apt为Ubuntu安装软件(扩展)"></a>使用apt为Ubuntu安装软件(扩展)</h4><h5 id="apt命令"><a href="#apt命令" class="headerlink" title="apt命令"></a>apt命令</h5><p>yum: RPM包软件管理器，用于自动化安装配置Linux软件，并可以自动解决依赖问题</p><p>语法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt [-y] [install | remove | search] 软件名称</span><br></pre></td></tr></table></figure><ul><li>选项:-y，自动确认，无需手动确认安装或卸载过程</li><li>install:安装</li><li>remove:卸载</li><li>search:搜索</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git学习</title>
      <link href="/2022/12/24/Git%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/12/24/Git%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Git学习"><a href="#Git学习" class="headerlink" title="Git学习"></a>Git学习</h1><h2 id="基本的Linux命令行命令"><a href="#基本的Linux命令行命令" class="headerlink" title="基本的Linux命令行命令"></a>基本的Linux命令行命令</h2><h3 id="改变目录"><a href="#改变目录" class="headerlink" title="改变目录"></a>改变目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 目的目录 <span class="comment"># 去往目的目录</span></span><br><span class="line"><span class="built_in">cd</span>.. <span class="comment"># 返回上级目录</span></span><br></pre></td></tr></table></figure><h3 id="显示信息"><a href="#显示信息" class="headerlink" title="显示信息"></a>显示信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span> <span class="comment"># 显示当前所在目录</span></span><br><span class="line"><span class="built_in">ls</span> <span class="comment"># 列出当前目录中的所有文件,</span></span><br></pre></td></tr></table></figure><h3 id="创建与删除"><a href="#创建与删除" class="headerlink" title="创建与删除"></a>创建与删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> index.js <span class="comment"># 新建一个名为&quot;index.js&quot;的文件</span></span><br><span class="line"><span class="built_in">rm</span> index.js <span class="comment"># 删除一个名为&quot;index.js&quot;的文件</span></span><br><span class="line"><span class="built_in">mkdir</span> <span class="comment"># 新建目录</span></span><br><span class="line"><span class="built_in">rm</span> -r <span class="comment"># 删除文件夹</span></span><br><span class="line"><span class="built_in">mv</span> 文件名称 scr 目标目录 <span class="comment"># 移动指定文件位置</span></span><br></pre></td></tr></table></figure><h3 id="终端相关"><a href="#终端相关" class="headerlink" title="终端相关"></a>终端相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">reset <span class="comment"># 重置终端</span></span><br><span class="line">clear <span class="comment"># 清屏</span></span><br><span class="line"><span class="built_in">history</span> <span class="comment"># 查看历史命令</span></span><br><span class="line"><span class="built_in">help</span> <span class="comment"># 帮助</span></span><br><span class="line"><span class="built_in">exit</span> <span class="comment"># 退出</span></span><br><span class="line"><span class="comment"># 表示注释</span></span><br></pre></td></tr></table></figure><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><h3 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h3><p>所有配置文件都保存在本地</p><h4 id="相关配置文件位置"><a href="#相关配置文件位置" class="headerlink" title="相关配置文件位置"></a>相关配置文件位置</h4><p>Git安装目录下的 Git\etc\gitconfig</p><h4 id="Linux命令查看配置"><a href="#Linux命令查看配置" class="headerlink" title="Linux命令查看配置"></a>Linux命令查看配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看配置</span></span><br><span class="line">git config -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统配置</span></span><br><span class="line">git config --system --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看用户本地配置</span></span><br><span class="line">git config --global --list</span><br></pre></td></tr></table></figure><h3 id="设置配置"><a href="#设置配置" class="headerlink" title="设置配置"></a>设置配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Git理论核心"><a href="#Git理论核心" class="headerlink" title="Git理论核心"></a>Git理论核心</h2><h3 id="工作区域"><a href="#工作区域" class="headerlink" title="工作区域"></a>工作区域</h3><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/Git%E6%A0%B8%E5%BF%83.png" alt="Git核心"></p><p><strong>工作区(Workspace/Working Directory)</strong>:工作区,平时存放代码</p><p><strong>暂存区(Stage/Index)</strong>:暂存区,用于临时存放改动</p><p><strong>仓库区(Repository)</strong>:仓库区(本地仓库),安全存放数据的位置,有所有版本的数据.其中HEAD指向最新放入仓库的版本</p><p><strong>远程git仓库(Remote)</strong></p><h3 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h3><ol><li><p>在工作目录中添加,修改文件</p></li><li><p>将需要进行版本管理的文件放入暂存区域 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . <span class="comment"># 将所有文件添加到暂存区</span></span><br></pre></td></tr></table></figure></li><li><p>将暂存区域的文件提交到git仓库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit</span><br></pre></td></tr></table></figure></li></ol><h2 id="Git项目搭建"><a href="#Git项目搭建" class="headerlink" title="Git项目搭建"></a>Git项目搭建</h2><h3 id="本地仓库搭建"><a href="#本地仓库搭建" class="headerlink" title="本地仓库搭建"></a>本地仓库搭建</h3><p>创建本地仓库的方式有两种:</p><ul><li><p>创建全新仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">git init</span><br></pre></td></tr></table></figure><p>执行后会看到隐藏目录.git</p></li><li><p>克隆远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录克隆一个库</span></span><br><span class="line">git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure></li></ul><h2 id="Git文件操作"><a href="#Git文件操作" class="headerlink" title="Git文件操作"></a>Git文件操作</h2><h3 id="文件的四种状态"><a href="#文件的四种状态" class="headerlink" title="文件的四种状态"></a>文件的四种状态</h3><ul><li><strong>Untracked</strong>:未跟踪,不参与版本控制</li><li><strong>Unmodified</strong>:文件已入库,未修改,即版本库中文件快照内容物文件夹中完全一致</li><li><strong>Modified</strong>:文件已修改,但没有其他操作.使用 <strong>git add</strong> 可进入暂存状态,使用 <strong>git checkout</strong> 则丢弃修改</li><li><strong>Staged</strong>:暂存状态,执行 <strong>git commit</strong> 则将修改同步到库中,执行 <strong>git reset HEAD filename</strong> 取消暂存</li></ul><h3 id="用命令行查看文件的状态"><a href="#用命令行查看文件的状态" class="headerlink" title="用命令行查看文件的状态"></a>用命令行查看文件的状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有文件状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定文件状态</span></span><br><span class="line">git status [filename]</span><br></pre></td></tr></table></figure><h3 id="用命令行改变文件状态"><a href="#用命令行改变文件状态" class="headerlink" title="用命令行改变文件状态"></a>用命令行改变文件状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加所有文件到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交暂存区内容到本地仓库</span></span><br><span class="line">git commit -m <span class="string">&quot;描述&quot;</span></span><br></pre></td></tr></table></figure><h3 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h3><p>在目录下建立 <strong>.gitignore</strong> 文件</p><ul><li><p>忽略文件中的空行或以井号( # )开始的行将会被忽略.</p></li><li><p>可以使用Linux通配符.例如:星号( * )代表任意多个字符,问号( ? )代表一个字符,方括号([ABC])代表可选字符范围,大括号({string1,string2..})代表可选的字符串等.</p></li><li><p>如果名称的最前面有一个感叹号( ! ),表示例外规则,将不被忽略.</p></li><li><p>如果名称的最前面是一个路径分隔符( / ),表示要忽略的文件在此目录下,而子目录中的文件不忽略.</p></li><li><p>如果名称的最后面是一个路径分隔符( / ),表示要忽略的是此目录下该名称的子目录,而非文件(默认文件或目录都忽略).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#为注释</span></span><br><span class="line">*.txt <span class="comment"># 忽略所有.txt结尾的文件</span></span><br><span class="line">!lib.txt <span class="comment"># 但lib.txt除外</span></span><br><span class="line">/temp <span class="comment"># 仅忽略项目根目录下的TODO文件,不包括其它目录temp(向前忽略)</span></span><br><span class="line">bui1d/ <span class="comment"># 忽略bui1d/目录下的所有文件(向后忽略)</span></span><br><span class="line">doc/*.txt <span class="comment"># 会忽略doc/notes.txt但不包括doc/server/arch.txt</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Gitee操作"><a href="#Gitee操作" class="headerlink" title="Gitee操作"></a>Gitee操作</h2><h3 id="设置本机绑定SSH公钥"><a href="#设置本机绑定SSH公钥" class="headerlink" title="设置本机绑定SSH公钥"></a>设置本机绑定SSH公钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入C:\user\Administratory\.ssh目录</span></span><br><span class="line"><span class="comment"># 生成公钥</span></span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><h3 id="将公钥注册到码云信息中"><a href="#将公钥注册到码云信息中" class="headerlink" title="将公钥注册到码云信息中"></a>将公钥注册到码云信息中</h3><p>将 <strong>id_rsa.pub</strong> 文件中的内容添加到SSH公钥中</p><h3 id="使用Gitee创建仓库"><a href="#使用Gitee创建仓库" class="headerlink" title="使用Gitee创建仓库"></a>使用Gitee创建仓库</h3><p>许可证:开源是否可以随意转载,开源但是不能商用</p><h2 id="Git分支"><a href="#Git分支" class="headerlink" title="Git分支"></a>Git分支</h2><h3 id="查看当前分支"><a href="#查看当前分支" class="headerlink" title="查看当前分支"></a>查看当前分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前本地分支</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远程分支</span></span><br><span class="line">git branch -r</span><br></pre></td></tr></table></figure><h3 id="管理分支"><a href="#管理分支" class="headerlink" title="管理分支"></a>管理分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建分支</span></span><br><span class="line">git branch [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建分支,且切换到该分支</span></span><br><span class="line">git checkout -b [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">git merge [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">git branch -d [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">git push origin --delete [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交远程分支</span></span><br><span class="line">git push -u [branch]</span><br></pre></td></tr></table></figure><h2 id="Unity-Git"><a href="#Unity-Git" class="headerlink" title="Unity Git"></a>Unity Git</h2><h3 id="出现问题"><a href="#出现问题" class="headerlink" title="出现问题"></a>出现问题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: detected dubious ownership <span class="keyword">in</span> repository at</span><br></pre></td></tr></table></figure><p>解决方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为git心的权限安全策略导致的报错，可以按提示把目录添加到信任列表</span></span><br><span class="line">git config --global --add safe.directory <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><h3 id="gitignore配置"><a href="#gitignore配置" class="headerlink" title=".gitignore配置"></a>.gitignore配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Library/</span><br><span class="line">Temp/</span><br><span class="line">*.sln</span><br><span class="line">*.csproj</span><br><span class="line">*.sln</span><br><span class="line">*.userprefs</span><br><span class="line">*.unityproj</span><br><span class="line">*.DS_Store</span><br><span class="line">.vs/</span><br><span class="line">.vsconfig</span><br><span class="line">Logs/</span><br><span class="line">UserSettings/</span><br><span class="line">Packages/</span><br></pre></td></tr></table></figure><h3 id="初始化本地仓库"><a href="#初始化本地仓库" class="headerlink" title="初始化本地仓库"></a>初始化本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化git</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将本地现有的文件上传到本地仓库</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;init project&quot;</span></span><br></pre></td></tr></table></figure><h3 id="连接远程仓库"><a href="#连接远程仓库" class="headerlink" title="连接远程仓库"></a>连接远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以gitee为例</span></span><br><span class="line"><span class="comment"># 添加远程仓库地址到本地</span></span><br><span class="line">git remote add origin [仓库地址](如git@gitee.com:lu-bei-lu-chen/unity-demo.git)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制将远程仓库中的东西拉取到本地</span></span><br><span class="line">git pull origin master --allow-unrelated-historie</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送到master分支</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot+Vite+Vue3二手商城</title>
      <link href="/2022/12/24/Spring-Boot-Vite-Vue3%E4%BA%8C%E6%89%8B%E5%95%86%E5%9F%8E/"/>
      <url>/2022/12/24/Spring-Boot-Vite-Vue3%E4%BA%8C%E6%89%8B%E5%95%86%E5%9F%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-Vite-Vue3二手商城"><a href="#Spring-Boot-Vite-Vue3二手商城" class="headerlink" title="Spring Boot+Vite+Vue3二手商城"></a>Spring Boot+Vite+Vue3二手商城</h1><h2 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h2><ul><li><p>node .js v16.16.0</p></li><li><p>npm v8.11.0</p></li><li><p>jdk v1.8</p></li><li><p>vite v2.9.13</p></li><li><p>后端JAVAIDE</p><ul><li>idea 2022.2.1</li></ul></li><li><p>前端开发IDE</p><ul><li><p>webStrom 2022.2.1</p></li><li><p>HBuilderX 3.6.14</p></li></ul></li><li><p>maven-3.8.6-bin</p></li></ul><h2 id="前端框架搭建"><a href="#前端框架搭建" class="headerlink" title="前端框架搭建"></a>前端框架搭建</h2><h3 id="vite-搭建"><a href="#vite-搭建" class="headerlink" title="vite 搭建"></a>vite 搭建</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm 7+, 需要额外的双横线：</span></span><br><span class="line">npm init vite@latest 项目名称 -- --template vue</span><br><span class="line">cd 安装路径</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h3 id="引入element-plus"><a href="#引入element-plus" class="headerlink" title="引入element-plus"></a>引入element-plus</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br></pre></td></tr></table></figure><h3 id="引入vue-router"><a href="#引入vue-router" class="headerlink" title="引入vue-router"></a>引入vue-router</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router -S</span><br></pre></td></tr></table></figure><h3 id="修改vite项目下的main-js"><a href="#修改vite项目下的main-js" class="headerlink" title="修改vite项目下的main.js"></a>修改vite项目下的main.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span><span class="comment">//引入element-plus框架</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/dist/index.css&#x27;</span><span class="comment">//应用element-plus样式</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span><span class="comment">//引入vue-router</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>).<span class="title function_">use</span>(router).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"><span class="comment">//.use(ElementPlus).use(router)使用引入的组件</span></span><br></pre></td></tr></table></figure><h2 id="前端框架编写"><a href="#前端框架编写" class="headerlink" title="前端框架编写"></a>前端框架编写</h2><h3 id="编写router配置"><a href="#编写router配置" class="headerlink" title="编写router配置"></a>编写router配置</h3><ul><li><p>在src目录下创建router目录</p></li><li><p>在目录下床架index.js来配置路由文件</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    createRouter,</span><br><span class="line">    createWebHistory,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认的网页标题</span></span><br><span class="line"><span class="keyword">const</span> defaultTitle = <span class="string">&#x27;home&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置路由文件</span></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 对应的路由路径</span></span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Home&#x27;</span>,</span><br><span class="line">        <span class="comment">// 对应的页面</span></span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../views/Home.vue&#x27;</span>),</span><br><span class="line">        <span class="comment">// 对应页面的名称</span></span><br><span class="line">        <span class="attr">meta</span>: &#123;<span class="attr">hidden</span>: <span class="literal">true</span>, <span class="attr">title</span>: <span class="string">&quot;主页&quot;</span>&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">    <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="string">&quot;/&quot;</span>),</span><br><span class="line">    <span class="attr">routes</span>: routes,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变对应页面的标题</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = to.<span class="property">meta</span>.<span class="property">title</span> ? to.<span class="property">meta</span>.<span class="property">title</span> : defaultTitle;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> - 输出对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><h3 id="应用router配置"><a href="#应用router配置" class="headerlink" title="应用router配置"></a>应用router配置</h3><ul><li><p>在src目录下创建views目录,即具体的路由界面</p></li><li><p>在views目录下创建需要的页面</p></li><li><p>改写App.vue</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">* &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="运行前端框架"><a href="#运行前端框架" class="headerlink" title="运行前端框架"></a>运行前端框架</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h2 id="编写登录页面"><a href="#编写登录页面" class="headerlink" title="编写登录页面"></a>编写登录页面</h2><h3 id="页面主体"><a href="#页面主体" class="headerlink" title="页面主体"></a>页面主体</h3><h2 id="编写SM-MS图床上传-巨坑"><a href="#编写SM-MS图床上传-巨坑" class="headerlink" title="编写SM.MS图床上传(巨坑)"></a>编写SM.MS图床上传(巨坑)</h2><h4 id="在vite-config-js中配置跨域设置"><a href="#在vite-config-js中配置跨域设置" class="headerlink" title="在vite.config.js中配置跨域设置"></a>在vite.config.js中配置跨域设置</h4><ul><li>坑:不能直接使用官方api地址,官方api地址在中国无法访问,需要改为”<a href="https://smms.app/api/v2/&quot;">https://smms.app/api/v2/&quot;</a></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server</span>:&#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">secure</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;https://smms.app/api/v2/&#x27;</span>,</span><br><span class="line">        <span class="attr">rewrite</span>: <span class="function"><span class="params">path</span> =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="编写前端请求"><a href="#编写前端请求" class="headerlink" title="编写前端请求"></a>编写前端请求</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;image/*&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;picture&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;getPicture($event)&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">getPicture</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span></span><br><span class="line"><span class="language-javascript">    formData.<span class="title function_">append</span>(<span class="string">&quot;smfile&quot;</span>, e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>]);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&quot;/api/upload&quot;</span>,<span class="comment">//sm.ms图床</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">headers</span>: &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;multipart/form-data&#x27;</span>, <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;kNpYkOLitfvgPOkitOTBwDfzNzGPMDLY&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: formData</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 在控制台输出响应体中图片在服务器中的url地址</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>)<span class="comment">//response.data就有返回的图片地址</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="comment">//存储图片</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="后端框架搭建"><a href="#后端框架搭建" class="headerlink" title="后端框架搭建"></a>后端框架搭建</h2><h3 id="配置maven-提高导包速度"><a href="#配置maven-提高导包速度" class="headerlink" title="配置maven(提高导包速度)"></a>配置maven(提高导包速度)</h3><ul><li>apache-maven-3.8.6\conf\setting.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>uk<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://uk.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>CN<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>OSChina Central<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.oschina.net/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>internal nexus repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo.maven.apache.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="设置idea"><a href="#设置idea" class="headerlink" title="设置idea"></a>设置idea</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><ul><li><p>MyBatisX</p></li><li><p>LomBok(默认已安装)</p></li></ul><h4 id="更改文件编码格式"><a href="#更改文件编码格式" class="headerlink" title="更改文件编码格式"></a>更改文件编码格式</h4><ul><li>全改为UTF-8</li></ul><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E6%94%B9UTF-8.png" alt="改UTF-8"></p><h4 id="设置maven路径"><a href="#设置maven路径" class="headerlink" title="设置maven路径"></a>设置maven路径</h4><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E8%AE%BE%E7%BD%AEmaven%E8%B7%AF%E5%BE%84.png" alt="设置maven路径"></p><h3 id="创建Spring-Boot项目"><a href="#创建Spring-Boot项目" class="headerlink" title="创建Spring-Boot项目"></a>创建Spring-Boot项目</h3><ul><li><p>使用idea自动搭建Spring-Boot项目</p></li><li><p>选择生成器中的Spring Initializer</p></li><li><p>将服务器URL改为:start.aliyun.com</p></li><li><p>类型选择Maven</p></li><li><p>Java版本选Java8</p></li><li><p><img src="https://cloudflare.lubeiluchen.cc/MarkPic/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE.png" alt="创建项目"></p></li><li><ul><li><p>选择组件</p></li><li><p>Spring Web (SpringMVC)</p></li><li><p>Mybatis</p></li><li><p>Lombok</p></li></ul></li></ul><h2 id="编写后端框架"><a href="#编写后端框架" class="headerlink" title="编写后端框架"></a>编写后端框架</h2><h3 id="设置application-properties来链接数据库"><a href="#设置application-properties来链接数据库" class="headerlink" title="设置application.properties来链接数据库"></a>设置application.properties来链接数据库</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用名称</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">demo</span></span><br><span class="line"><span class="comment">#下面这些内容是为了让MyBatis映射</span></span><br><span class="line"><span class="comment">#指定Mybatis的Mapper文件</span></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=<span class="string">classpath:mappers/*xml</span></span><br><span class="line"><span class="comment">#指定Mybatis的实体目录</span></span><br><span class="line"><span class="attr">mybatis.type-aliases-package</span>=<span class="string">com.example.demo.entity</span></span><br><span class="line"><span class="comment"># 数据库驱动：</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment"># 数据源名称</span></span><br><span class="line"><span class="attr">spring.datasource.name</span>=<span class="string">defaultDataSource</span></span><br><span class="line"><span class="comment"># 数据库连接地址</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/数据库名称?serverTimezone=GMT%2b8&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="comment"># 数据库用户名&amp;密码：</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">root</span></span><br><span class="line"><span class="comment"># 应用服务 WEB 访问端口</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8080</span></span><br></pre></td></tr></table></figure><h3 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h3><ul><li><p>在路径下新建common 包</p></li><li><p>新建Java类,命名为CorsConfig</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前跨域请求最大有效时长。这里默认1天</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">MAX_AGE</span> <span class="operator">=</span> <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">corsConfiguration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        corsConfiguration.addAllowedOrigin(<span class="string">&quot;*&quot;</span>); <span class="comment">// 1 设置访问源地址</span></span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>); <span class="comment">// 2 设置访问源请求头</span></span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>); <span class="comment">// 3 设置访问源请求方法</span></span><br><span class="line">        corsConfiguration.setMaxAge(MAX_AGE);</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, corsConfiguration); <span class="comment">// 4 对接口配置跨域设置</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建Mapper-接口-目录"><a href="#创建Mapper-接口-目录" class="headerlink" title="创建Mapper(接口)目录"></a>创建Mapper(接口)目录</h3><p>在resources文件下创建mapper目录(mybatis.mapper-locations=classpath:mappers/*xml由上方该条语句来确定创建目录的位置)</p><h3 id="创建entity-实体-类"><a href="#创建entity-实体-类" class="headerlink" title="创建entity(实体)类"></a>创建entity(实体)类</h3><ul><li><p>创建entity包,用于管理不同实例entity类</p></li><li><p>以实例User为例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入lombok,快速创建get,set函数</span></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 标记为lombok的Data</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">// 根据数据库设置对应数据类型</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建和编写dao-工具-类"><a href="#创建和编写dao-工具-类" class="headerlink" title="创建和编写dao(工具)类"></a>创建和编写dao(工具)类</h3><ul><li><p>创建dao包,用于管理不同实例dao类</p></li><li><p>以实例UserDao为例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.demo.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为controller类中使用@Autowired自动注入</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"><span class="comment">// 创建函数后使用Alt+Enter快捷键通过插件快速创建对应的Mapper(需要先创建Mapper接口)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 寻找表中所有元素</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">findById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Param(&quot;username&quot;) String username 传入参数,且参数名称为&quot;username&quot;</span></span><br><span class="line">    User <span class="title function_">getByUser</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username, <span class="meta">@Param(&quot;password&quot;)</span> String password)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加后会返回向表中添加元素的个数</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insert</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">update</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">findByUser</span><span class="params">(String username)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>配置相应Mapper.xml的文件头部来相互链接</p></li><li><p>以UserMapper.xml文件为例</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;对应Dao类的空间地址&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写Mapper-写SQL查询语句-文件"><a href="#编写Mapper-写SQL查询语句-文件" class="headerlink" title="编写Mapper(写SQL查询语句)文件"></a>编写Mapper(写SQL查询语句)文件</h3><ul><li><p>以UserMapper.xml为例</p></li><li><p>增:</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span>&gt;</span></span><br><span class="line">      INSERT INTO `user`(username, password,sex,age,phone,email,address,avatar)</span><br><span class="line">      values (#&#123;username&#125;, #&#123;password&#125;,#&#123;sex&#125;,#&#123;age&#125;,#&#123;phone&#125;,#&#123;email&#125;,#&#123;address&#125;,#&#123;avatar&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>删:</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteById&quot;</span>&gt;</span></span><br><span class="line">        DELETE</span><br><span class="line">        from `user`</span><br><span class="line">        where id = #&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>改(使用了动态判断):</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span>&gt;</span></span><br><span class="line">        update `user`</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username != null and username != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                username = #&#123;username&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null and password != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                password = #&#123;password&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex != null and sex != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                sex = #&#123;sex&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null&quot;</span>&gt;</span></span><br><span class="line">                age = #&#123;age&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;phone != null and phone != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                phone = #&#123;phone&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null and email != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                email = #&#123;email&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;address != null and address != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                address = #&#123;address&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;avatar != null and avatar != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                avatar = #&#123;avatar&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>查: </li></ul><p>查询所有:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.demo.entity.User&quot;</span>&gt;</span></span><br><span class="line">    SELECT *</span><br><span class="line">    FROM user;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过Id查询</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.demo.entity.User&quot;</span>&gt;</span></span><br><span class="line">    SELECT *</span><br><span class="line">    FROM user</span><br><span class="line">    WHERE id = #&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过用户名和密码查询</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getByUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.demo.entity.User&quot;</span>&gt;</span></span><br><span class="line">    SELECT *</span><br><span class="line">    FROM user</span><br><span class="line">    WHERE username = #&#123;username&#125;</span><br><span class="line">      AND password = #&#123;password&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建Result-返回数据打包-类"><a href="#创建Result-返回数据打包-类" class="headerlink" title="创建Result(返回数据打包)类"></a>创建Result(返回数据打包)类</h3><ul><li>在common包中创建Result类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SUCCESS_CODE</span> <span class="operator">=</span> <span class="string">&quot;200&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SUCCESS_MSG</span> <span class="operator">=</span> <span class="string">&quot;请求成功&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ERROR_CODE</span> <span class="operator">=</span> <span class="string">&quot;-1&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 成功的返回的函数(无参数)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Result</span>();</span><br><span class="line">        result.setCode(SUCCESS_CODE);</span><br><span class="line">        result.setMsg(SUCCESS_MSG);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有返回参数的函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span>  success();</span><br><span class="line">        result.setData(data);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求失败后,返回一个失败原因</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">error</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Result</span>();</span><br><span class="line">        result.setCode(ERROR_CODE);</span><br><span class="line">        result.setMsg(msg);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建和编写controller-控制-类"><a href="#创建和编写controller-控制-类" class="headerlink" title="创建和编写controller(控制)类"></a>创建和编写controller(控制)类</h3><ul><li><p>创建controller包,用于管理不同实例controller类</p></li><li><p>以UserController为例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.common.Result;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置该类为控制器类</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="comment">// 设置默认访问路径,即通过&quot;127.0.0.1/user&quot;来访问接口</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动注入</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get接口</span></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(userDao.findAll());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @PathVariable需要一个参数时</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">findById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(userDao.findById(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/username/&#123;username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">findByUser</span><span class="params">(<span class="meta">@PathVariable</span> String username)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(userDao.findByUser(username));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// @RequestBody 需要多个参数时,直接把前端的对象转换为实体类</span></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">        <span class="comment">// 一旦不满足要求就直接返回失败</span></span><br><span class="line">        <span class="keyword">if</span> (user.getUsername() == <span class="literal">null</span> || user.getPassword() == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;参数错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span>Result.success(userDao.insert(user));</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (user.getUsername() == <span class="literal">null</span> || user.getPassword() == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;参数错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">User</span> <span class="variable">result</span> <span class="operator">=</span> userDao.getByUser(user.getUsername(), user.getPassword());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (result == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;账号或密码错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Result.success(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (user.getId() == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;参数错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        userDao.update(user);</span><br><span class="line">        <span class="keyword">return</span> Result.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">delete</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (id == <span class="literal">null</span> || id == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;参数错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.success(userDao.deleteById(id) == <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
